name: Aplicar Terraform

on:
  workflow_call:

jobs:
  terraform-apply:
    runs-on: ubuntu-latest

    steps:
      - name: ðŸ›’ Descargar cÃ³digo del repositorio
        uses: actions/checkout@v4

      - name: ðŸ”‘ Configurar credenciales AWS
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Instalar Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: latest

      - name: Restore Terraform State
        run: |
          if [ -f $GITHUB_WORKSPACE/terraform-state/terraform.tfstate ]; then
            cp $GITHUB_WORKSPACE/terraform-state/terraform.tfstate .
          else
            echo "Se omitiÃ³ la restauraciÃ³n del estado remoto."
          fi
          
      - name: Limpiar entorno
        run: |
          rm -rf $GITHUB_WORKSPACE/terraform-state
          echo "Entorno limpio: archivos temporales eliminados."

      - name: Configurar Terraform
        run: terraform init

      - name: Plan de Terraform
        run: terraform plan -out=tfplan

      - name: Guardar Plan
        uses: actions/upload-artifact@v4
        with:
          name: terraform-plan
          path: tfplan

      - name: Aplicar Terraform
        run: terraform apply -auto-approve tfplan
      
      - name: Limpiar entorno despuÃ©s del despliegue
        run: |
          rm -rf terraform.tfstate
          echo "Archivos de estado eliminados despuÃ©s del despliegue."